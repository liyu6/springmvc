<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd">

    <!-- 配置connnection-factory,指定连接rabbit server 的参数 -->
    <rabbit:connection-factory id="connectionFactory"
                               username="liyu" password="666666" host="192.168.9.175" port="5672" virtual-host="/"/>

    <!-- 定义rabbit template 用于数据的接收和发送 -->
    <rabbit:template id="amqTemplate" connection-factory="connectionFactory" exchange="LI_YU"></rabbit:template>

    <!-- 通过指定下面的admin信息，当前productor中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!--指定生产者和消费者-->
    <bean id="produtor" class="com.springmvc.util.Productor">
        <property name="rabbitTemplate" ref="amqTemplate"></property>
    </bean>
    <!--<bean id="consumor" class="com.springmvc.util.Consumor"></bean>-->

    <!--
       durable:是否持久化
       auto_delete: 当所有消费客户端连接断开后，是否自动删除队列
       exclusive: 仅创建者可以使用的私有队列，断开后自动删除
    -->
    <rabbit:queue name="LI_YU_001" durable="true" auto-delete="false" exclusive="false" />

    <!--
       rabbit:direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。
       rabbit:binding：设置消息queue匹配的key
     -->
    <rabbit:direct-exchange name="LI_YU" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="LI_YU_001" key="HELLO_KEY"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>

<!--    &lt;!&ndash; queue litener 观察 监听模式 当有消息到达时会通知监听在对应队列上的监听对象 &ndash;&gt;
    <rabbit:listener-container connection-factory="connectionFactory">
        <rabbit:listener queue-names="LI_YU_001" ref="consumor" method="onMessage"/>
    </rabbit:listener-container>-->
</beans>
